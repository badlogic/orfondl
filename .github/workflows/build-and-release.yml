name: Build and Release orfondl

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: [1.18.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build binary
        run: go build -o orfondl-${{ matrix.os }}-${{ matrix.go-version }} ./...
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: orfondl-${{ matrix.os }}
          path: orfondl-${{ matrix.os }}-${{ matrix.go-version }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            Release of version ${{ github.ref_name }}

      - name: Upload Release Asset for Ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/orfondl-ubuntu-latest-${{ matrix.go-version }}
          asset_name: orfondl-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/orfondl-windows-latest-${{ matrix.go-version }}
          asset_name: orfondl-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/orfondl-macos-latest-${{ matrix.go-version }}
          asset_name: orfondl-macos
          asset_content_type: application/octet-stream
